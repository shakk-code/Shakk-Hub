local whitelist = {
    "gingerblox293",
    "animedefenders37582",
    "NomnomNomityya85"
}

local player = game.Players.LocalPlayer

local function isPlayerWhitelisted(username)
    for _, allowedUsername in ipairs(whitelist) do
        if allowedUsername == username then
            return true
        end
    end
    return false
end

if not isPlayerWhitelisted(player.Name) then
    warn("You are not whitelisted to use this script.")
    return
end

loadstring(game:HttpGet("https://raw.githubusercontent.com/AnthonyIsntHere/anthonysrepository/main/scripts/AntiChatLogger.lua", true))()

local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Shakk Hub",
   LoadingTitle = "Shakk Hub",
   LoadingSubtitle = "by minishakk",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil,
      FileName = "Big Hub"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink",
      RememberJoins = true
   },
   KeySystem = false,
   KeySettings = {
      Title = "Hub Key",
      Subtitle = "Key System",
      Note = "bestscriptever",
      FileName = "Key",
      SaveKey = false,
      GrabKeyFromSite = false,
      Key = {"bestscriptever"}
   }
})

local MTab = Window:CreateTab("Main", 4483362458)
local PTab = Window:CreateTab("Player", 4483362458)
local FTab = Window:CreateTab("Fun", 4483362458)
local UTab = Window:CreateTab("Utility", 4483362458)
local STab = Window:CreateTab("Settings", 4483362458)

local Information = MTab:CreateParagraph({Title = "Shakk Hub", Content = "idek"})

local WalkSpeedSlider = PTab:CreateSlider({
    Name = "Walkspeed",
    Range = {0, 1000},
    Increment = 1,
    CurrentValue = 16,
    Flag = "WSSlider",
    Callback = function(Value)
        local player = game.Players.LocalPlayer
        if player and player.Character and player.Character:FindFirstChild("Humanoid") then
            player.Character.Humanoid.WalkSpeed = Value
        end
    end
})

WalkSpeedSlider:Set(16)

local ResetWS = PTab:CreateButton({
   Name = "Reset Walkspeed",
   Callback = function()
        WalkSpeedSlider:Set(16)
   end,
})

ResetWS:Set("Reset Walkspeed")

local freezeEnabled = false

local FreezeToggle = PTab:CreateToggle({
    Name = "Freeze Character",
    CurrentValue = false,
    Flag = "FreezeToggle",
    Callback = function(state)
        freezeEnabled = state
        local player = game.Players.LocalPlayer
        if player and player.Character then
            local character = player.Character
            if freezeEnabled then
                character.Humanoid:ChangeState(Enum.HumanoidStateType.Physics)
                for _, part in pairs(character:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = true
                        part.Anchored = true
                        local bodyVelocity = part:FindFirstChildOfClass("BodyVelocity")
                        local bodyGyro = part:FindFirstChildOfClass("BodyGyro")
                        if bodyVelocity then bodyVelocity:Destroy() end
                        if bodyGyro then bodyGyro:Destroy() end
                    end
                end
            else
                for _, part in pairs(character:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.CanCollide = true
                        part.Anchored = false
                    end
                end
                character.Humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
            end
        end
    end
})

local flying = false
local flySpeed = 50
local flyControl = {F = 0, B = 0, L = 0, R = 0}
local flyConnection

local function startFlying()
    local player = game.Players.LocalPlayer
    local character = player.Character
    local humanoid = character and character:FindFirstChildOfClass("Humanoid")
    if humanoid and character:FindFirstChild("HumanoidRootPart") then
        local rootPart = character.HumanoidRootPart

        local bodyVelocity = Instance.new("BodyVelocity", rootPart)
        bodyVelocity.MaxForce = Vector3.new(100000, 100000, 100000)
        bodyVelocity.Velocity = Vector3.new(0, 0, 0)

        local bodyGyro = Instance.new("BodyGyro", rootPart)
        bodyGyro.MaxTorque = Vector3.new(100000, 100000, 100000)
        bodyGyro.CFrame = rootPart.CFrame

        flyConnection = game:GetService("RunService").RenderStepped:Connect(function()
            local forwardBackward = workspace.CurrentCamera.CFrame.LookVector * (flyControl.F - flyControl.B)
            local leftRight = workspace.CurrentCamera.CFrame.RightVector * (flyControl.R - flyControl.L)
            bodyVelocity.Velocity = (forwardBackward + leftRight) * flySpeed
            bodyGyro.CFrame = workspace.CurrentCamera.CFrame
        end)

        local userInputService = game:GetService("UserInputService")

        userInputService.InputBegan:Connect(function(input)
            if input.KeyCode == Enum.KeyCode.W then
                flyControl.F = 1
            elseif input.KeyCode == Enum.KeyCode.S then
                flyControl.B = 1
            elseif input.KeyCode == Enum.KeyCode.A then
                flyControl.L = 1
            elseif input.KeyCode == Enum.KeyCode.D then
                flyControl.R = 1
            end
        end)

        userInputService.InputEnded:Connect(function(input)
            if input.KeyCode == Enum.KeyCode.W then
                flyControl.F = 0
            elseif input.KeyCode == Enum.KeyCode.S then
                flyControl.B = 0
            elseif input.KeyCode == Enum.KeyCode.A then
                flyControl.L = 0
            elseif input.KeyCode == Enum.KeyCode.D then
                flyControl.R = 0
            end
        end)
    end
end

local function stopFlying()
    if flyConnection then
        flyConnection:Disconnect()
        flyConnection = nil
    end
    local player = game.Players.LocalPlayer
    local character = player.Character
    local rootPart = character and character:FindFirstChild("HumanoidRootPart")
    
    if rootPart then
        for _, obj in pairs(rootPart:GetChildren()) do
            if obj:IsA("BodyVelocity") or obj:IsA("BodyGyro") then
                obj:Destroy()
            end
        end
    end
end

local FlyToggle = PTab:CreateToggle({
    Name = "Toggle Fly",
    CurrentValue = false,
    Flag = "FlyToggle",
    Callback = function(state)
        flying = state
        if flying then
            startFlying()
        else
            stopFlying()
        end
    end
})

local noclipEnabled = false
local noclipConnection

local function startNoclip()
    local player = game.Players.LocalPlayer
    local character = player.Character

    noclipConnection = game:GetService("RunService").Stepped:Connect(function()
        if character then
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") and part.CanCollide then
                    part.CanCollide = false
                end
            end
        end
    end)
end

local function stopNoclip()
    if noclipConnection then
        noclipConnection:Disconnect()
        noclipConnection = nil
    end
    local player = game.Players.LocalPlayer
    local character = player.Character

    if character then
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = true
            end
        end
    end
end

local NoclipToggle = PTab:CreateToggle({
    Name = "Toggle Noclip",
    CurrentValue = false,
    Flag = "NoclipToggle",
    Callback = function(state)
        noclipEnabled = state
        if noclipEnabled then
            startNoclip()
        else
            stopNoclip()
        end
    end
})

local bypassText = ""

local ChatBypassTextbox = UTab:CreateInput({
    Name = "Chat Bypass",
    Text = "",
    PlaceholderText = "Enter message to bypass",
    Flag = "ChatBypassTextbox",
    Callback = function(Text)
        bypassText = Text
    end
})

--local letterMapping = {
--    a = "ạ", b = "ḅ", c = "с", d = "ḍ", e = "ẹ", f = "ḟ", g = "ġ", h = "ḥ",
--    i = "ị", j = "ĵ", k = "ḳ", l = "ḽ", m = "ṃ", n = "ṇ", o = "ọ", p = "ṗ",
--    q = "ʠ", r = "ṛ", s = "ṣ", t = "ṭ", u = "ụ", v = "ṿ", w = "ẉ", x = "ẋ",
--    y = "ỵ", z = "ẓ", A = "Ạ", B = "Ḅ", C = "С", D = "Ḍ", E = "Ẹ", F = "Ḟ",
--    G = "Ġ", H = "Ḥ", I = "Ị", J = "Ĵ", K = "Ḳ", L = "Ḷ", M = "Ṃ", N = "Ṇ",
--    O = "Ọ", P = "Ṗ", Q = "q", R = "Ṛ", S = "Ṣ", T = "Ṭ", U = "Ụ", V = "Ṿ",
--    W = "Ẇ", X = "Ẋ", Y = "Ỵ", Z = "Ẓ"
-- }

local letterMapping = {
    a = "󠀈a", b = "󠀗󠀗󠀗󠀗b󠀗󠀗󠀗󠀗", c = "с󠀗", d = "d󠀗󠀗", e = "е", f = "󠀗󠀗f󠀗󠀗", g = "g", h = "һ󠀗󠀗󠀗󠀗",
    i = "і", j = "ј", k = "󠀗k󠀗󠀗", l = "l", m = "m", n = "n󠀗󠀗", o = "о", p = "p",
    q = "ԛ", r = "r", s = "󠀈ѕ󠀈󠀈󠀈", t = "󠀗󠀗󠀗󠀗t󠀗󠀗", u = "u󠀗󠀗", v = "v", w = "w", x = "х",
    y = "у", z = "z", A = "А", B = "В", C = "С", D = "D", E = "E", F = "F",
    G = "Ԍ", H = "Н", I = "l", J = "Ј", K = "К", L = "L", M = "М", N = "N",
    O = "О", P = "Р", Q = "Ԛ", R = "R", S = "Ѕ", T = "Т", U = "U", V = "V",
    W = "W", X = "Х", Y = "Y", Z = "Z"
}

local function bypassMessage(message)
    local bypassedMessage = ""
    for i = 1, #message do
        local char = message:sub(i, i)
        bypassedMessage = bypassedMessage .. (letterMapping[char] or char)
    end
    bypassedMessage = bypassedMessage:gsub(" ", "")
    bypassedMessage = bypassedMessage:gsub("nigger", "󠀗n󠀗󠀗іg󠀗󠀗g󠀗е󠀗󠀗r󠀗󠀗")
    bypassedMessage = bypassedMessage:gsub("niggers", "n󠀗󠀗іg󠀗󠀗g󠀗е󠀗󠀗r󠀗󠀗󠀗󠀗s󠀗󠀗󠀗󠀗")
    bypassedMessage = bypassedMessage:gsub("rape", " 󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗r󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗a󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗p󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗e󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗")
    bypassedMessage = bypassedMessage:gsub("raping", "󠀗󠀗󠀗󠀗r󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗a󠀗󠀗󠀗󠀗p󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗i󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗n󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗g󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗󠀗")

    return bypassedMessage
end

local SendButton = UTab:CreateButton({
    Name = "Send",
    Callback = function()
        if bypassText ~= "" then
            local bypassedText = bypassMessage(bypassText)
            game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(bypassedText, "All")
        else
            Rayfield:Notify({
                Title = "No message specified.",
                Content = "You didn't enter a message to bypass.",
                Duration = 6.5,
                Image = 4483362458,
                Actions = {
                    Ignore = {
                        Name = "Okay!",
                        Callback = function()
                            print("The user tapped Okay!")
                        end
                    }
                }
            })
        end
    end
})

SendButton:Set("Send")

local seperatorSpace = UTab:CreateSection("")

seperatorSpace:Set("")

local seperator = UTab:CreateSection("Premade Bypasses")

seperator:Set("Premade Bypasses")


local girlsPussy = UTab:CreateButton({ 
    Name = "(thinks in mind) * oh how i want to absolutely destroy that girls pussy.. *", 
    Callback = function()
        game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("(thinksinmind)*ohhowiwanttoabsolutelyde󠀈󠀈str󠀈󠀈oy󠀈that󠀈󠀈g󠀈󠀈ir󠀈󠀈ls󠀈󠀈󠀈󠀈p󠀈󠀈u󠀈s󠀈󠀈󠀈s󠀈y󠀈󠀈󠀈.󠀈.󠀈󠀈󠀈*", "All")
    end
})

girlsPussy:Set("(thinks in mind) * oh how i want to absolutely destroy that girls pussy.. *")

local whippingCock = UTab:CreateButton({
    Name = "*starts whipping my cock out slowly to the point u wouldnt notice*",
    Callback = function()
        game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("*starts󠀈w󠀈󠀈hip󠀈󠀈p󠀈󠀈i󠀈󠀈n󠀈󠀈g󠀈󠀈my󠀈󠀈c󠀈󠀈o󠀈󠀈c󠀈k󠀈outslowlytothe󠀈po󠀈󠀈i󠀈nt󠀈󠀈u󠀈wouldntnotice*", "All")
    end
})

whippingCock:Set("*starts whipping my cock out slowly to the point u wouldnt notice*")

local wannaHaveSex = UTab:CreateButton({
    Name = "wanna have sex?",
    Callback = function()
        game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("wanna󠀈have󠀈󠀈󠀈s󠀈󠀈󠀈󠀈e󠀈󠀈󠀈󠀈x󠀈󠀈?", "All")
    end
})

wannaHaveSex:Set("wanna have sex?")

local gingerblox = UTab:CreateButton({
    Name = "we should all suck gingerblox huge cock",
    Callback = function()
        game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("weshouldalls󠀈󠀈uck󠀈gin󠀈ger󠀈bloxhug󠀈e󠀈c󠀈󠀈oc󠀈󠀈k󠀈󠀈󠀈", "All")
    end
})

gingerblox:Set("we should all suck gingerblox huge cock")

local teleportTarget = ""
local spamEnabled = false
local spamInterval = 0.01 -- Interval in seconds for spamming

local TeleportTextbox = FTab:CreateInput({
    Name = "Teleport Target",
    Text = "",
    PlaceholderText = "Enter Player Name or Display Name",
    Flag = "TeleportTextbox",
    Callback = function(text)
        teleportTarget = text
    end
})

local function findPlayerByNameOrDisplayName(name)
    for _, player in pairs(game.Players:GetPlayers()) do
        if player.Name == name or player.DisplayName == name then
            return player
        end
    end
    return nil
end

local function teleportPlayer(targetName)
    local player = game.Players.LocalPlayer
    local targetPlayer = findPlayerByNameOrDisplayName(targetName)
    if targetPlayer and targetPlayer.Character then
        local playerCharacter = player.Character
        local playerHRP = playerCharacter and playerCharacter:FindFirstChild("HumanoidRootPart")
        local targetCharacter = targetPlayer.Character
        local targetHRP = targetCharacter:FindFirstChild("HumanoidRootPart")

        if playerHRP and targetHRP then
            -- Teleport the player to the target's position
            playerHRP.CFrame = targetHRP.CFrame

            -- Create a BodyGyro to spin the player
            local bodyGyro = Instance.new("BodyGyro")
            bodyGyro.Parent = playerHRP
            bodyGyro.MaxTorque = Vector3.new(400000, 400000, 400000)
            bodyGyro.CFrame = playerHRP.CFrame
            bodyGyro.P = 50000 -- High value for fast spinning

            -- Clean up BodyGyro after a short duration
            game:GetService("Debris"):AddItem(bodyGyro, 1) -- Adjust duration if needed
        end
    end
end

local TeleportButton = FTab:CreateButton({
    Name = "Teleport",
    Callback = function()
        if teleportTarget ~= "" then
            teleportPlayer(teleportTarget)
        else
            Rayfield:Notify({
                Title = "No target specified.",
                Content = "You didn't specify any target to teleport.",
                Duration = 6.5,
                Image = 4483362458,
                Actions = {
                    Ignore = {
                        Name = "Okay!",
                        Callback = function()
                            print("The user tapped Okay!")
                        end
                    }
                }
            })
        end
    end
})

local SpamToggle = FTab:CreateToggle({
    Name = "Spam Teleport",
    Flag = "SpamToggle",
    Callback = function(state)
        spamEnabled = state
        if spamEnabled then
            while spamEnabled do
                if teleportTarget ~= "" then
                    teleportPlayer(teleportTarget)
                end
                wait(spamInterval) -- Wait for the interval before the next teleport
            end
        end
    end
})

TeleportButton:Set("Teleport")

local invisButton = PTab:CreateButton({
    Name = "Give Invisible Tool",
    Flag = "TeleportTool",
    Callback = function()
        loadstring(game:HttpGet("https://gist.githubusercontent.com/skid123skidlol/cd0d2dce51b3f20ad1aac941da06a1a1/raw/f58b98cce7d51e53ade94e7bb460e4f24fb7e0ff/%257BFE%257D%2520Invisible%2520Tool%2520(can%2520hold%2520tools)",true))()
    end
})

invisButton:Set("Give Invisible Tool")
