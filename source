--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0 = tonumber;
local v1 = string.byte;
local v2 = string.char;
local v3 = string.sub;
local v4 = string.gsub;
local v5 = string.rep;
local v6 = table.concat;
local v7 = table.insert;
local v8 = math.ldexp;
local v9 = getfenv or function()
	return _ENV;
end;
local v10 = setmetatable;
local v11 = pcall;
local v12 = select;
local v13 = unpack or table.unpack;
local v14 = tonumber;
local function v15(v16, v17, ...)
	local v18 = 1;
	local v19;
	v16 = v4(v3(v16, 5), "..", function(v30)
		if (v1(v30, 2) == 81) then
			v19 = v0(v3(v30, 1, 1));
			return "";
		else
			local v83 = v2(v0(v30, 16));
			if v19 then
				local v91 = 0;
				local v92;
				while true do
					if (v91 == 1) then
						return v92;
					end
					if (v91 == 0) then
						v92 = v5(v83, v19);
						v19 = nil;
						v91 = 1;
					end
				end
			else
				return v83;
			end
		end
	end);
	local function v20(v31, v32, v33)
		if v33 then
			local v84 = (v31 / (2 ^ (v32 - (2 - 1)))) % (((1642 - (1523 + 114)) - 3) ^ (((v33 - (1 - 0)) - (v32 - (1 + 0))) + (2 - 1)));
			return v84 - (v84 % (620 - (555 + 64)));
		else
			local v85 = 931 - (857 + 74);
			local v86;
			while true do
				if (v85 == (568 - (367 + 201))) then
					v86 = (929 - (214 + 713)) ^ (v32 - ((1 - 0) + 0));
					return (((v31 % (v86 + v86)) >= v86) and (1 + 0)) or (877 - (282 + 595));
				end
			end
		end
	end
	local function v21()
		local v34 = v1(v16, v18, v18);
		v18 = v18 + 1;
		return v34;
	end
	local function v22()
		local v35, v36 = v1(v16, v18, v18 + 2);
		v18 = v18 + (1067 - (68 + 997));
		return (v36 * (1526 - (226 + 1044))) + v35;
	end
	local function v23()
		local v37 = 0 - 0;
		local v38;
		local v39;
		local v40;
		local v41;
		while true do
			if (v37 == 1) then
				return (v41 * ((30800330 - 14022997) - (32 + 85))) + (v40 * ((64576 - (87 + 263)) + 1310)) + (v39 * ((237 - (67 + 113)) + 199)) + v38;
			end
			if (v37 == 0) then
				v38, v39, v40, v41 = v1(v16, v18, v18 + (960 - (892 + 65)));
				v18 = v18 + (9 - 5);
				v37 = 1 - 0;
			end
		end
	end
	local function v24()
		local v42 = 0 + 0 + 0;
		local v43;
		local v44;
		local v45;
		local v46;
		local v47;
		local v48;
		while true do
			if (v42 == (9 - 6)) then
				if (v47 == (0 + (0 - 0))) then
					if (v46 == (0 - 0)) then
						return v48 * (0 + 0);
					else
						v47 = 431 - (44 + 386);
						v45 = 1486 - (998 + 488);
					end
				elseif (v47 == (8135 - 6088)) then
					return ((v46 == 0) and (v48 * ((953 - (802 + 150)) / (0 - 0)))) or (v48 * NaN);
				end
				return v8(v48, v47 - (1855 - 832)) * (v45 + (v46 / (2 ^ (38 + 14))));
			end
			if (v42 == ((4729 - 3730) - (361 + 554 + 82))) then
				v47 = v20(v44, 59 - (1 + 37), (65 - 46) + 12);
				v48 = ((v20(v44, (33 + 8) - 9) == (860 - (814 + 45))) and -(2 - 1)) or (1188 - (1069 + 118));
				v42 = (1753 - (760 + 987)) - 3;
			end
			if (v42 == (1 - 0)) then
				v45 = 1 + (0 - 0);
				v46 = (v20(v44, 1 - 0, 20 + 0) * ((793 - (368 + (2336 - (1789 + 124)))) ^ ((866 - (745 + 21)) - (62 + 6)))) + v43;
				v42 = 1425 - (630 + (1792 - 999));
			end
			if (v42 == (18 - (10 + 8))) then
				v43 = v23();
				v44 = v23();
				v42 = 3 - 2;
			end
		end
	end
	local function v25(v49)
		local v50;
		if not v49 then
			local v87 = (4347 - 2934) - (447 + 966);
			while true do
				if (v87 == (0 - 0)) then
					v49 = v23();
					if (v49 == (1817 - (1703 + 33 + 81))) then
						return "";
					end
					break;
				end
			end
		end
		v50 = v3(v16, v18, (v18 + v49) - (702 - (376 + 325)));
		v18 = v18 + v49;
		local v51 = {};
		for v66 = 1 - 0, #v50 do
			v51[v66] = v2(v1(v3(v50, v66, v66)));
		end
		return v6(v51);
	end
	local v26 = v23;
	local function v27(...)
		return {...}, v12("#", ...);
	end
	local function v28()
		local v52 = (function()
			return 0 - 0;
		end)();
		local v53 = (function()
			return;
		end)();
		local v54 = (function()
			return;
		end)();
		local v55 = (function()
			return;
		end)();
		local v56 = (function()
			return;
		end)();
		local v57 = (function()
			return;
		end)();
		local v58 = (function()
			return;
		end)();
		local v59 = (function()
			return;
		end)();
		while true do
			local v68 = (function()
				return 0 + 0;
			end)();
			while true do
				if (v68 == (1 + 0)) then
					if (1 == v52) then
						local v97 = (function()
							return 0 - 0;
						end)();
						while true do
							if (v97 == (1 - 0)) then
								v59 = (function()
									return {};
								end)();
								for v107 = #".", v58 do
									local v108 = (function()
										return 0 + 0;
									end)();
									local v109 = (function()
										return;
									end)();
									local v110 = (function()
										return;
									end)();
									local v111 = (function()
										return;
									end)();
									while true do
										if (v108 == (1636 - (1373 + 263))) then
											v109 = (function()
												return 1000 - (451 + 549);
											end)();
											v110 = (function()
												return nil;
											end)();
											v108 = (function()
												return 1;
											end)();
										end
										if (v108 == 1) then
											v111 = (function()
												return nil;
											end)();
											while true do
												if (v109 == (0 + 0)) then
													local v195 = (function()
														return 0 - 0;
													end)();
													local v196 = (function()
														return;
													end)();
													while true do
														if (v195 ~= (0 - 0)) then
														else
															v196 = (function()
																return 1384 - (746 + 638);
															end)();
															while true do
																if (v196 == (1 + 0)) then
																	v109 = (function()
																		return 1 - 0;
																	end)();
																	break;
																end
																if (v196 ~= (341 - (218 + 123))) then
																else
																	v110 = (function()
																		return v21();
																	end)();
																	v111 = (function()
																		return nil;
																	end)();
																	v196 = (function()
																		return 1582 - (1535 + 46);
																	end)();
																end
															end
															break;
														end
													end
												end
												if (v109 == (1 + 0)) then
													if (v110 == #"/") then
														v111 = (function()
															return v21() ~= 0;
														end)();
													elseif (v110 == (1 + 1)) then
														v111 = (function()
															return v24();
														end)();
													elseif (v110 == #"xnx") then
														v111 = (function()
															return v25();
														end)();
													end
													v59[v107] = (function()
														return v111;
													end)();
													break;
												end
											end
											break;
										end
									end
								end
								v97 = (function()
									return 562 - (306 + 254);
								end)();
							end
							if (v97 == 2) then
								v52 = (function()
									return 1 + 1;
								end)();
								break;
							end
							if (v97 == (0 - 0)) then
								v57 = (function()
									return {v54,v55,nil,v56};
								end)();
								v58 = (function()
									return v23();
								end)();
								v97 = (function()
									return 1 + 0;
								end)();
							end
						end
					end
					break;
				end
				if (v68 ~= 0) then
				else
					if (v52 ~= 2) then
					else
						v57[#"nil"] = (function()
							return v21();
						end)();
						for v100 = #".", v23() do
							local v101 = (function()
								return v21();
							end)();
							if (v20(v101, #"!", #"/") == (0 - 0)) then
								local v103 = (function()
									return 603 - (268 + 335);
								end)();
								local v104 = (function()
									return;
								end)();
								local v105 = (function()
									return;
								end)();
								local v106 = (function()
									return;
								end)();
								while true do
									if ((292 - (60 + 230)) ~= v103) then
									else
										if (v20(v105, #".", #":") == #"\\") then
											v106[574 - (426 + 146)] = (function()
												return v59[v106[2]];
											end)();
										end
										if (v20(v105, 2, 2) == #"/") then
											v106[#"-19"] = (function()
												return v59[v106[#"-19"]];
											end)();
										end
										v103 = (function()
											return 1 + 2;
										end)();
									end
									if (v103 ~= 3) then
									else
										if (v20(v105, #"91(", #"91(") ~= #"]") then
										else
											v106[#"0313"] = (function()
												return v59[v106[#"?id="]];
											end)();
										end
										v54[v100] = (function()
											return v106;
										end)();
										break;
									end
									if (v103 == 0) then
										local v118 = (function()
											return 1456 - (282 + 1174);
										end)();
										while true do
											if (v118 ~= 0) then
											else
												v104 = (function()
													return v20(v101, 813 - (569 + 242), #"91(");
												end)();
												v105 = (function()
													return v20(v101, #".com", 17 - 11);
												end)();
												v118 = (function()
													return 1;
												end)();
											end
											if (v118 == (1 + 0)) then
												v103 = (function()
													return 1;
												end)();
												break;
											end
										end
									end
									if (v103 ~= (1025 - (706 + 318))) then
									else
										v106 = (function()
											return {v22(),v22(),nil,nil};
										end)();
										if (v104 == (1251 - (721 + 530))) then
											local v122 = (function()
												return 0;
											end)();
											local v123 = (function()
												return;
											end)();
											while true do
												if (v122 ~= (1271 - (945 + 326))) then
												else
													v123 = (function()
														return 0 - 0;
													end)();
													while true do
														if (v123 ~= 0) then
														else
															v106[#"91("] = (function()
																return v22();
															end)();
															v106[#"xnxx"] = (function()
																return v22();
															end)();
															break;
														end
													end
													break;
												end
											end
										elseif (v104 == #".") then
											v106[#"gha"] = (function()
												return v23();
											end)();
										elseif (v104 == (2 + 0)) then
											v106[#"xnx"] = (function()
												return v23() - (2 ^ (716 - (271 + 429)));
											end)();
										elseif (v104 ~= #"-19") then
										else
											local v401 = (function()
												return 0 + 0;
											end)();
											local v402 = (function()
												return;
											end)();
											while true do
												if (v401 ~= (1500 - (1408 + 92))) then
												else
													v402 = (function()
														return 1086 - (461 + 625);
													end)();
													while true do
														if (v402 == (1288 - (993 + 295))) then
															v106[#"xxx"] = (function()
																return v23() - (2 ^ 16);
															end)();
															v106[#".com"] = (function()
																return v22();
															end)();
															break;
														end
													end
													break;
												end
											end
										end
										v103 = (function()
											return 2;
										end)();
									end
								end
							end
						end
						for v102 = #"\\", v23() do
							v55, v102, v28 = (function()
								return v53(v55, v102, v28);
							end)();
						end
						return v57;
					end
					if (0 == v52) then
						local v99 = (function()
							return 0;
						end)();
						while true do
							if (v99 == (1 + 1)) then
								v52 = (function()
									return 1172 - (418 + 753);
								end)();
								break;
							end
							if (v99 == 1) then
								v55 = (function()
									return {};
								end)();
								v56 = (function()
									return {};
								end)();
								v99 = (function()
									return 1 + 1;
								end)();
							end
							if (v99 ~= 0) then
							else
								v53 = (function()
									return function(v112, v113, v114)
										local v115 = (function()
											return 0;
										end)();
										local v116 = (function()
											return;
										end)();
										while true do
											if ((0 + 0) == v115) then
												v116 = (function()
													return 0;
												end)();
												while true do
													if (v116 == 0) then
														v112[v113 - #"}"] = (function()
															return v114();
														end)();
														return v112, v113, v114;
													end
												end
												break;
											end
										end
									end;
								end)();
								v54 = (function()
									return {};
								end)();
								v99 = (function()
									return 1 + 0;
								end)();
							end
						end
					end
					v68 = (function()
						return 1 + 0;
					end)();
				end
			end
		end
	end
	local function v29(v60, v61, v62)
		local v63 = v60[530 - (406 + 123)];
		local v64 = v60[1771 - (1749 + 20)];
		local v65 = v60[1 + 2];
		return function(...)
			local v69 = v63;
			local v70 = v64;
			local v71 = v65;
			local v72 = v27;
			local v73 = 1323 - (1249 + 73);
			local v74 = -1;
			local v75 = {};
			local v76 = {...};
			local v77 = v12("#", ...) - 1;
			local v78 = {};
			local v79 = {};
			for v88 = 0, v77 do
				if (v88 >= v71) then
					v75[v88 - v71] = v76[v88 + (1146 - (466 + 679))];
				else
					v79[v88] = v76[v88 + (2 - 1)];
				end
			end
			local v80 = (v77 - v71) + (2 - 1);
			local v81;
			local v82;
			while true do
				v81 = v69[v73];
				v82 = v81[1901 - (106 + 1794)];
				if ((v82 <= (15 + 32)) or (2609 >= 3234)) then
					if (v82 <= (6 + 17)) then
						if (v82 <= (32 - 21)) then
							if ((v82 <= (13 - 8)) or (3033 >= 4031)) then
								if ((v82 <= (116 - (4 + 110))) or (3858 < 1272) or (1401 == 4668)) then
									if ((2776 >= 1321) and (v82 <= (584 - (57 + 527)))) then
										v79[v81[1429 - (41 + 1386)]]();
									elseif (v82 == 1) then
										local v199 = 103 - (12 + 5 + 86);
										local v200;
										local v201;
										local v202;
										local v203;
										while true do
											if (v199 == (1 + 0)) then
												v74 = (v202 + v200) - (1 - 0);
												v203 = (0 + 0) - 0;
												v199 = 168 - (122 + 44);
											end
											if (v199 == (2 - (0 + 0))) then
												for v403 = v200, v74 do
													local v404 = 0 - 0;
													while true do
														if (((3664 == 3664) and (v404 == 0)) or (487 > 2303)) then
															v203 = v203 + 1 + 0;
															v79[v403] = v201[v203];
															break;
														end
													end
												end
												break;
											end
											if ((1941 >= 450) and (v199 == (0 + 0 + 0))) then
												v200 = v81[3 - 1];
												v201, v202 = v72(v79[v200](v79[v200 + (66 - (30 + 35))]));
												v199 = 1 + 0 + 0;
											end
										end
									else
										local v204 = v81[1259 - (1043 + 214)];
										local v205 = {v79[v204](v79[v204 + (434 - (153 + 280))])};
										local v206 = 0;
										for v315 = v204, v81[15 - 11] do
											local v316 = 1212 - (323 + 889);
											while true do
												if ((v316 == (0 - 0)) or (4646 < 324) or (4503 == 3462)) then
													v206 = v206 + ((1677 - 1096) - (361 + 219));
													v79[v315] = v205[v206];
													break;
												end
											end
										end
									end
								elseif (v82 <= (323 - (53 + 240 + 27))) then
									local v124 = 0;
									local v125;
									local v126;
									local v127;
									while true do
										if (v124 == (0 + 0)) then
											v125 = v81[415 - (15 + 158 + 240)];
											v126 = v79[v125];
											v124 = 983 - (18 + 964);
										end
										if ((553 <= 1543) and (v124 == 1)) then
											v127 = v81[11 - 8];
											for v347 = 1 + 0 + 0, v127 do
												v126[v347] = v79[v125 + v347];
											end
											break;
										end
									end
								elseif ((3833 == 3833) and (v82 == 4)) then
									if (v79[v81[2]] == v81[3 + 1]) then
										v73 = v73 + (851 - (20 + 830));
									else
										v73 = v81[3];
									end
								else
									v79[v81[2]] = v79[v81[3]] + v79[v81[4]];
								end
							elseif ((2015 == 2015) and ((v82 <= (7 + 1 + 0)) or (1240 > 3370))) then
								if ((v82 <= (132 - (116 + 10))) or (2481 == 4682)) then
									v79[v81[2]] = v62[v81[1 + 0 + (2 - 0)]];
								elseif (v82 > ((461 + 284) - (542 + (863 - (89 + 578))))) then
									v79[v81[2]] = v81[6 - 3];
								else
									local v210 = v81[1 + 1];
									local v211 = v79[v81[2 + 1]];
									v79[v210 + 1 + 0] = v211;
									v79[v210] = v211[v81[10 - 6]];
								end
							elseif (v82 <= (22 - 13)) then
								do
									return v79[v81[1553 - (1126 + 425)]];
								end
							elseif (v82 > (415 - (118 + 287))) then
								v79[v81[7 - 5]] = v81[1124 - (118 + 1003)] ~= 0;
							else
								local v216 = v81[5 - 3];
								local v217 = v81[4];
								local v218 = v216 + (379 - (142 + 235));
								local v219 = {v79[v216](v79[v216 + 1], v79[v218])};
								for v320 = 1, v217 do
									v79[v218 + v320] = v219[v320];
								end
								local v220 = v219[1];
								if (v220 or (4241 <= 2332)) then
									v79[v218] = v220;
									v73 = v81[13 - 10];
								else
									v73 = v73 + 1 + 0;
								end
							end
						elseif ((4727 >= 208) and (v82 <= (994 - (553 + 424)))) then
							if (v82 <= (26 - 12)) then
								if ((v82 <= (11 + 1 + 0)) or (2364 < 1157)) then
									local v130 = 0 - 0;
									local v131;
									local v132;
									while true do
										if ((v130 == (0 + 0)) or (1167 > 1278)) then
											v131 = v81[3];
											v132 = v79[v131];
											v130 = 1 + 0;
										end
										if (v130 == (1 + 0)) then
											for v353 = v131 + 1 + 0, v81[8 - 4] do
												v132 = v132 .. v79[v353];
											end
											v79[v81[5 - 3]] = v132;
											break;
										end
									end
								elseif ((v82 > (29 - 16)) or (1145 <= 1082)) then
									v79[v81[1 + 1]] = #v79[v81[14 - 11]];
								else
									v79[v81[2]]();
								end
							elseif (v82 <= (768 - (239 + 514))) then
								v79[v81[1 + 1]][v81[1332 - (797 + 532)]] = v79[v81[4]];
							elseif (v82 == ((1061 - (572 + 477)) + 1 + 3)) then
								v79[v81[2]] = {};
							else
								local v223 = 0 + 0;
								local v224;
								while true do
									if (v223 == ((0 + 0) - 0)) then
										v224 = v81[2];
										v79[v224](v13(v79, v224 + (1203 - (373 + 99 + 730)), v81[734 - (476 + 255)]));
										break;
									end
								end
							end
						elseif (v82 <= ((1236 - (84 + 2)) - (369 + 761))) then
							if (v82 <= (11 + 7)) then
								if ((280 < 3851) and not v79[v81[2 - 0]]) then
									v73 = v73 + 1;
								else
									v73 = v81[5 - 2];
								end
							elseif ((v82 > (257 - (64 + 174))) or (3105 == 4881)) then
								local v226 = v81[1 + 1];
								v79[v226] = v79[v226](v13(v79, v226 + (1 - 0), v81[339 - ((236 - 92) + 192)]));
							else
								local v228 = 0;
								local v229;
								while true do
									if ((216 - (42 + 174)) == v228) then
										v229 = v81[2 + 0 + 0];
										v79[v229](v13(v79, v229 + 1, v81[3]));
										break;
									end
								end
							end
						elseif (v82 <= ((860 - (497 + 345)) + 3)) then
							v79[v81[1 + 1]][v81[1507 - (363 + 1141)]] = v79[v81[1584 - (1183 + 397)]];
						elseif (v82 > (1 + 21)) then
							v79[v81[5 - 3]] = #v79[v81[3 + 0]];
						else
							for v326 = v81[2], v81[3 + 0] do
								v79[v326] = nil;
							end
						end
					elseif (v82 <= (2010 - (1913 + 62))) then
						if ((v82 <= (19 + 2 + 8)) or (1887 > 4878)) then
							if ((v82 <= (68 - 42)) or (3007 > 3194)) then
								if ((v82 <= ((3290 - (605 + 728)) - (404 + 161 + 1368))) or (4087 > 4116)) then
									local v137 = v81[7 - 5];
									local v138 = {v79[v137](v13(v79, v137 + (1 - 0), v74))};
									local v139 = 0;
									for v184 = v137, v81[4 + 0] do
										v139 = v139 + (857 - (564 + 292));
										v79[v184] = v138[v139];
									end
								elseif (v82 > (42 - 17)) then
									local v231 = v81[5 - 3];
									local v232 = {};
									for v328 = 305 - (244 + 60), #v78 do
										local v329 = 0 + 0 + 0;
										local v330;
										while true do
											if ((1106 <= 1266) and ((((1759 - 1283) - (41 + 435)) == v329) or (2136 >= 2946))) then
												v330 = v78[v328];
												for v441 = 1001 - (938 + 63), #v330 do
													local v442 = 0 + 0 + 0;
													local v443;
													local v444;
													local v445;
													while true do
														if ((2165 <= 2521) and (v442 == (1125 - (936 + (523 - 334))))) then
															v443 = v330[v441];
															v444 = v443[1 + 0];
															v442 = 1;
														end
														if (v442 == 1) then
															v445 = v443[1615 - (1565 + 48)];
															if ((v444 == v79) and (v445 >= v231)) then
																v232[v445] = v444[v445];
																v443[1 + 0] = v232;
															end
															break;
														end
													end
												end
												break;
											end
										end
									end
								elseif ((2861 > 661) and not v79[v81[1140 - (782 + 356)]]) then
									v73 = v73 + 1;
								else
									v73 = v81[3];
								end
							elseif (v82 <= (294 - (176 + 69 + 22))) then
								do
									return;
								end
							elseif (v82 == (72 - 44)) then
								v79[v81[2 - 0]] = v62[v81[1095 - (975 + 117)]];
							else
								local v235 = v81[2];
								local v236, v237 = v72(v79[v235](v79[v235 + (1876 - (157 + 1718))]));
								v74 = (v237 + v235) - (1 + 0);
								local v238 = 0 - 0;
								for v331 = v235, v74 do
									local v332 = 0;
									while true do
										if ((3155 < 4650) and (v332 == (0 - 0))) then
											v238 = v238 + (1019 - (697 + 321));
											v79[v331] = v236[v238];
											break;
										end
									end
								end
							end
						elseif ((4525 > 4519) and (v82 <= (86 - (543 - (457 + 32))))) then
							if (v82 <= (63 - 33)) then
								if (v79[v81[4 - 2]] ~= v81[4]) then
									v73 = v73 + 1 + 0;
								else
									v73 = v81[5 - 2];
								end
							elseif ((3774 >= 1839) and (v82 == (83 - 52))) then
								v79[v81[1229 - (322 + 905)]][v81[614 - (602 + 9)]] = v81[1193 - (191 + 258 + 740)];
							else
								v79[v81[874 - (826 + 46)]] = v81[1405 - (832 + 570)] ~= (947 - (245 + 662 + 40));
							end
						elseif (v82 <= (103 - 70)) then
							v79[v81[1 + 1]] = v79[v81[1901 - (260 + 1638)]] - v79[v81[2 + 2]];
						elseif (v82 > ((1677 - 1203) - (382 + 58))) then
							local v243 = v81[3];
							local v244 = v79[v243];
							for v333 = v243 + (3 - (1 + 1)), v81[4 + 0] do
								v244 = v244 .. v79[v333];
							end
							v79[v81[3 - 1]] = v244;
						elseif (v79[v81[5 - 3]] == v79[v81[1209 - ((1698 - (588 + 208)) + 303)]]) then
							v73 = v73 + (1 - 0);
						else
							v73 = v81[6 - 3];
						end
					elseif ((2811 == 2811) and (v82 <= 41)) then
						if (v82 <= (4 + 34)) then
							if ((2146 > 1122) and (v82 <= (1726 - (1121 + 569)))) then
								local v141 = v81[216 - (22 + 192)];
								local v142 = v79[v141];
								for v187 = v141 + (684 - ((1301 - 818) + (2000 - (884 + 916)))), v81[1466 - (1404 + 59)] do
									v7(v142, v79[v187]);
								end
							elseif (v82 == ((211 - 110) - 64)) then
								if (v79[v81[2 - 0]] == v81[769 - (468 + 297)]) then
									v73 = v73 + ((327 + 236) - (334 + 228));
								else
									v73 = v81[10 - 7];
								end
							else
								local v246 = v81[4 - 2];
								local v247 = v79[v246];
								local v248 = v79[v246 + ((655 - (232 + 421)) - 0)];
								if ((v248 > (0 + (1889 - (1569 + 320)))) or (56 == 3616)) then
									if (((3178 > 972) and (v247 > v79[v246 + (237 - (141 + 95))])) or (2421 < 622)) then
										v73 = v81[1 + 2 + 0];
									else
										v79[v246 + (7 - 4)] = v247;
									end
								elseif ((1009 <= 1130) and (4766 == 4766) and (v247 < v79[v246 + (2 - 1)])) then
									v73 = v81[1 + 2];
								else
									v79[v246 + 3] = v247;
								end
							end
						elseif (v82 <= (106 - (13 + 54))) then
							local v143 = (0 - 0) + 0;
							local v144;
							while true do
								if (0 == v143) then
									v144 = v81[2 + 0];
									v79[v144] = v79[v144]();
									break;
								end
							end
						elseif ((2758 < 2980) and (v82 > (56 - (621 - (316 + 289))))) then
							local v249 = v81[2 + (0 - 0)];
							local v250, v251 = v72(v79[v249](v13(v79, v249 + (164 - (92 + 71)), v81[3])));
							v74 = (v251 + v249) - (1 + 0);
							local v252 = 0 - 0;
							for v336 = v249, v74 do
								v252 = v252 + 1;
								v79[v336] = v250[v252];
							end
						else
							local v253 = v79[v81[769 - (27 + 547 + 191)]];
							if (v253 or (2745 > 3128) or (86 >= 3626)) then
								v73 = v73 + 1 + 0;
							else
								v79[v81[4 - 2]] = v253;
								v73 = v81[2 + 1];
							end
						end
					elseif ((v82 <= (893 - (254 + 595))) or (1144 >= 4606)) then
						if ((2395 == 2395) and (3338 >= 277) and (v82 <= 42)) then
							local v145 = 126 - (55 + 71);
							local v146;
							while true do
								if (v145 == (0 - 0)) then
									v146 = v81[1792 - (573 + 1217)];
									v79[v146](v79[v146 + 1]);
									break;
								end
							end
						elseif ((3780 > 2709) and (v82 == 43)) then
							local v254 = 0 - 0;
							local v255;
							local v256;
							local v257;
							while true do
								if (0 == v254) then
									v255 = v81[2];
									v256 = v79[v255];
									v254 = 1 + 0;
								end
								if (((2610 > 2560) and (v254 == (1 - 0))) or (237 >= 2273)) then
									v257 = v81[942 - (714 + 225)];
									for v414 = (1455 - (666 + 787)) - 1, v257 do
										v256[v414] = v79[v255 + v414];
									end
									break;
								end
							end
						elseif (v81[2 - 0] == v79[v81[1 + 3]]) then
							v73 = v73 + (1 - 0);
						else
							v73 = v81[809 - ((543 - (360 + 65)) + 688)];
						end
					elseif ((v82 <= (93 - (25 + 23))) or (2040 <= 703)) then
						v61[v81[1 + 2 + 0]] = v79[v81[1888 - (927 + 959)]];
					elseif (v82 == 46) then
						local v258 = v81[6 - 4];
						v79[v258] = v79[v258](v79[v258 + (733 - (16 + 716))]);
					else
						v79[v81[3 - 1]] = v79[v81[100 - (11 + 86)]] * v79[v81[9 - 5]];
					end
				elseif (v82 <= (356 - (175 + 110))) then
					if ((3279 <= 3967) and (v82 <= (148 - (343 - (79 + 175))))) then
						if (v82 <= (261 - 208)) then
							if ((v82 <= (1846 - (503 + 1293))) or (1988 == 877)) then
								if ((v82 <= (133 - 85)) or (1194 > 3083)) then
									v79[v81[2 + 0]][v81[3]] = v81[4];
								elseif (v82 > 49) then
									v79[v81[1063 - (810 + 251)]] = v79[v81[3 + (0 - 0)]] + v79[v81[2 + 2]];
								else
									local v262 = v81[2 + 0 + 0];
									local v263 = v79[v262 + 2];
									local v264 = v79[v262] + v263;
									v79[v262] = v264;
									if ((916 >= 747) and (v263 > 0)) then
										if ((4291 > 1912) and (v264 <= v79[v262 + ((1636 - 1102) - (43 + 490))])) then
											v73 = v81[3];
											v79[v262 + (736 - (711 + (41 - 19)))] = v264;
										end
									elseif (v264 >= v79[v262 + (3 - 2)]) then
										v73 = v81[862 - (240 + 619)];
										v79[v262 + 1 + 2] = v264;
									end
								end
							elseif (v82 <= (80 - 29)) then
								v79[v81[1 + (900 - (503 + 396))]] = v79[v81[1747 - (1344 + 400)]][v81[409 - (255 + 150)]];
							elseif ((2003 < 2339) and ((v82 == 52) or (2444 > 2954))) then
								v79[v81[2 + 0]] = v81[2 + 1];
							elseif ((2892 < 3514) and v79[v81[8 - 6]]) then
								v73 = v73 + (3 - 2);
							else
								v73 = v81[1742 - (404 + 1335)];
							end
						elseif ((432 == 432) and (v82 <= (462 - (183 + 223)))) then
							if (v82 <= (64 - (191 - (92 + 89)))) then
								if ((533 == 533) and v79[v81[2 + 0]]) then
									v73 = v73 + 1;
								else
									v73 = v81[3];
								end
							elseif (v82 == 55) then
								local v269 = v81[1 + 1];
								v79[v269] = v79[v269](v13(v79, v269 + (338 - (10 + 327)), v81[3 + (0 - 0)]));
							elseif (v79[v81[340 - (118 + 220)]] ~= v81[2 + 2]) then
								v73 = v73 + (450 - (108 + 341));
							else
								v73 = v81[2 + 1 + 0];
							end
						elseif ((v82 <= 57) or (1145 >= 1253)) then
							v79[v81[8 - 6]] = v29(v70[v81[1496 - (711 + 782)]], nil, v62);
						elseif (v82 > (111 - 53)) then
							v73 = v81[3];
						else
							local v272 = v81[471 - (270 + 118 + 81)];
							local v273 = v79[v272];
							local v274 = v79[v272 + 2];
							if ((3418 > 2118) and (v274 > (0 - 0))) then
								if ((3066 <= 3890) and (v273 > v79[v272 + 1 + 0])) then
									v73 = v81[1822 - (80 + 500 + 1239)];
								else
									v79[v272 + (6 - 3)] = v273;
								end
							elseif (v273 < v79[v272 + (2 - 1)]) then
								v73 = v81[3 + 0];
							else
								v79[v272 + 3] = v273;
							end
						end
					elseif (v82 <= (3 + 62)) then
						if (v82 <= (28 + 34)) then
							if ((v82 <= (156 - 96)) or (2998 >= 3281)) then
								local v154 = v81[2 + 0];
								local v155, v156 = v72(v79[v154](v13(v79, v154 + (1168 - (645 + 522)), v81[3])));
								v74 = (v156 + v154) - (1791 - (1010 + 780));
								local v157 = 0 + 0;
								for v188 = v154, v74 do
									local v189 = 0 - 0;
									while true do
										if (v189 == (0 - 0)) then
											v157 = v157 + (1837 - (1045 + 791));
											v79[v188] = v155[v157];
											break;
										end
									end
								end
							elseif ((v82 > 61) or (4649 <= 2632)) then
								local v275 = v81[2];
								v79[v275] = v79[v275]();
							else
								v79[v81[2 + 0]] = v29(v70[v81[7 - 4]], nil, v62);
							end
						elseif (v82 <= (96 - 33)) then
							local v158 = v81[507 - (351 + 154)];
							v79[v158] = v79[v158](v79[v158 + 1]);
						elseif (v82 == (1638 - (1281 + 293))) then
							v79[v81[2]] = v61[v81[269 - (28 + 238)]];
						else
							local v280 = 0 - 0;
							local v281;
							local v282;
							local v283;
							while true do
								if (v280 == (1559 - (1381 + 178))) then
									v281 = v81[2 + 0];
									v282 = {v79[v281](v13(v79, v281 + 1 + 0, v74))};
									v280 = 3 - 2;
								end
								if (v280 == (1 + 0)) then
									v283 = 470 - (381 + 89);
									for v425 = v281, v81[4] do
										v283 = v283 + 1 + 0;
										v79[v425] = v282[v283];
									end
									break;
								end
							end
						end
					elseif (((595 <= 3413) and (v82 <= (46 + 22))) or (3860 > 4872)) then
						if ((v82 <= ((340 - 228) - 46)) or (3998 == 2298)) then
							v79[v81[1158 - (1074 + 82)]] = v79[v81[(1 + 5) - 3]] - v79[v81[1788 - (214 + (2394 - 824))]];
						elseif (v82 == (1522 - (990 + 465))) then
							v79[v81[1 + 1]] = v79[v81[2 + 1]] * v79[v81[4 + 0]];
						else
							v79[v81[(1251 - (485 + 759)) - 5]] = v79[v81[(4000 - 2271) - (1668 + 58)]];
						end
					elseif ((v82 <= (695 - (512 + 114))) or (8 >= 2739)) then
						v79[v81[5 - 3]] = v79[v81[5 - 2]];
					elseif (v82 == (243 - 173)) then
						if ((3078 >= 2591) and (v81[1 + (1190 - (442 + 747))] == v79[v81[4]])) then
							v73 = v73 + (1136 - (832 + 303)) + (946 - (88 + 858));
						else
							v73 = v81[3 + 0];
						end
					else
						v79[v81[6 - 4]] = v61[v81[1997 - (109 + 1885)]];
					end
				elseif ((3199 < 4030) and (v82 <= (1552 - (1269 + 200)))) then
					if ((2590 == 2590) and (v82 <= ((45 + 102) - 70))) then
						if (v82 <= (889 - (98 + 717))) then
							if (v82 <= (898 - (802 + 24))) then
								local v163 = v81[2 - 0];
								do
									return v13(v79, v163, v163 + v81[3 - 0]);
								end
							elseif (v82 > (11 + 62)) then
								if ((v79[v81[2 + 0]] == v79[v81[1 + 3 + 0]]) or (82 >= 1870)) then
									v73 = v73 + 1 + 0 + (789 - (766 + 23));
								else
									v73 = v81[3];
								end
							elseif ((2624 < 4557) and (v79[v81[5 - 3]] ~= v79[v81[19 - 15]])) then
								v73 = v73 + (3 - 2);
							else
								v73 = v81[(2 - 0) + 1];
							end
						elseif (v82 <= (31 + 44)) then
							local v164 = v81[2 + 0];
							local v165 = v79[v164 + (4 - 2)];
							local v166 = v79[v164] + v165;
							v79[v164] = v166;
							if (v165 > (0 + 0)) then
								if (v166 <= v79[v164 + 1]) then
									local v367 = 0 + 0;
									while true do
										if (v367 == (1433 - (797 + 636))) then
											v73 = v81[14 - 11];
											v79[v164 + (1622 - (1427 + 192))] = v166;
											break;
										end
									end
								end
							elseif ((v166 >= v79[v164 + 1 + 0]) or (3131 > 3542)) then
								local v368 = 0;
								while true do
									if ((2577 >= 1578) and (777 < 2078) and (v368 == (0 - 0))) then
										v73 = v81[(10 - 7) + 0];
										v79[v164 + (1075 - (1036 + 37)) + 1] = v166;
										break;
									end
								end
							end
						elseif (v82 == (402 - (192 + 134))) then
							v79[v81[1278 - (316 + 960)]] = v79[v81[2 + 1]][v79[v81[3 + 1 + 0]]];
						else
							v79[v81[2]] = {};
						end
					elseif (v82 <= 80) then
						if ((4103 <= 4571) and (1696 <= 2282) and (v82 <= (73 + 5))) then
							local v168 = v81[7 - 5];
							local v169 = v79[v81[554 - (83 + 468)]];
							v79[v168 + (1807 - (1202 + 604))] = v169;
							v79[v168] = v169[v81[(34 - 16) - 14]];
						elseif ((v82 > 79) or (1495 == 4787)) then
							v79[v81[2 - 0]] = v79[v81[3 + 0]][v81[10 - 6]];
						else
							do
								return v79[v81[2]];
							end
						end
					elseif ((v82 <= (406 - (45 + 280))) or (310 > 4434)) then
						local v173 = 0 + 0;
						local v174;
						local v175;
						local v176;
						while true do
							if (v173 == (0 + 0)) then
								v174 = v70[v81[2 + 1]];
								v175 = nil;
								v173 = 1;
							end
							if (((1 + 0) == v173) or (1761 >= 2462)) then
								v176 = {};
								v175 = v10({}, {__index=function(v369, v370)
									local v371 = 0 + 0;
									local v372;
									while true do
										if ((2168 <= 4360) and (4551 > 2328) and (v371 == (0 - 0))) then
											v372 = v176[v370];
											return v372[1][v372[1913 - (340 + 1571)]];
										end
									end
								end,__newindex=function(v373, v374, v375)
									local v376 = v176[v374];
									v376[1 + 0][v376[1774 - (1733 + 39)]] = v375;
								end});
								v173 = 5 - 3;
							end
							if ((1036 - (125 + 909)) == v173) then
								for v378 = 1, v81[4] do
									v73 = v73 + 1;
									local v379 = v69[v73];
									if (v379[1949 - (1096 + 852)] == 69) then
										v176[v378 - 1] = {v79,v379[3 + 0]};
									else
										v176[v378 - (513 - (409 + 103))] = {v61,v379[98 - (51 + 44)]};
									end
									v78[#v78 + 1 + 0] = v176;
								end
								v79[v81[2]] = v29(v174, v175, v62);
								break;
							end
						end
					elseif (v82 == (1399 - (1114 + 203))) then
						if ((994 == 994) and (3825 >= 467) and (v79[v81[728 - ((1141 - (910 + 3)) + 498)]] ~= v79[v81[1 + 3]])) then
							v73 = v73 + 1 + 0;
						else
							v73 = v81[666 - (174 + 489)];
						end
					else
						local v294 = v81[5 - 3];
						v79[v294] = v79[v294](v13(v79, v294 + (1906 - (830 + 1075)), v74));
					end
				elseif ((v82 <= (613 - ((772 - 469) + 221))) or (2890 == 557)) then
					if ((v82 <= (1355 - ((1915 - (1466 + 218)) + 1038))) or (4770 == 2904)) then
						if ((1655 > 401) and (v82 <= (70 + 14))) then
							local v177 = v81[1164 - (171 + 991)];
							local v178 = {v79[v177](v79[v177 + 1])};
							local v179 = 0 - 0;
							for v190 = v177, v81[9 - 5] do
								v179 = v179 + 1;
								v79[v190] = v178[v179];
							end
						elseif (v82 > (69 + (1164 - (556 + 592)))) then
							local v296 = 0 - 0;
							local v297;
							while true do
								if ((3063 <= 3426) and (v296 == (0 - 0))) then
									v297 = v81[2];
									v79[v297] = v79[v297](v13(v79, v297 + (1 - 0), v74));
									break;
								end
							end
						else
							v61[v81[9 - (3 + 3)]] = v79[v81[2]];
						end
					elseif ((v82 <= 87) or (3903 == 4536)) then
						local v180 = 0;
						local v181;
						local v182;
						while true do
							if ((1459 > 764) and (4093 <= 4845) and (v180 == (1249 - (111 + 1137)))) then
								for v382 = (967 - (329 + 479)) - (91 + (921 - (174 + 680))), #v78 do
									local v383 = 0 - 0;
									local v384;
									while true do
										if (v383 == (0 + 0)) then
											v384 = v78[v382];
											for v453 = 523 - (423 + 100), #v384 do
												local v454 = 0 + 0;
												local v455;
												local v456;
												local v457;
												while true do
													if ((1569 <= 3647) and (v454 == (2 - (3 - 2)))) then
														v457 = v455[2 + 0];
														if ((v456 == v79) and (v457 >= v181)) then
															v182[v457] = v456[v457];
															v455[772 - (326 + 445)] = v182;
														end
														break;
													end
													if ((v454 == 0) or (641 > 4334)) then
														v455 = v384[v453];
														v456 = v455[4 - 3];
														v454 = 2 - (1 - 0);
													end
												end
											end
											break;
										end
									end
								end
								break;
							end
							if (v180 == 0) then
								v181 = v81[4 - 2];
								v182 = {};
								v180 = 712 - (530 + 181);
							end
						end
					elseif (v82 > (969 - (614 + 267))) then
						do
							return;
						end
					else
						v79[v81[34 - (19 + 13)]] = v79[v81[4 - 1]][v79[v81[9 - 5]]];
					end
				elseif (v82 <= 92) then
					if (v82 <= (257 - 167)) then
						for v193 = v81[1 + 1], v81[4 - 1] do
							v79[v193] = nil;
						end
					elseif ((v82 == 91) or (4046 >= 4927)) then
						local v302 = 0 - (0 + 0);
						local v303;
						while true do
							if (v302 == (1812 - (1293 + 519))) then
								v303 = v79[v81[743 - (396 + 343)]];
								if ((3399 >= 2260) and v303) then
									v73 = v73 + 1;
								else
									local v452 = 0 - 0;
									while true do
										if ((4623 >= 2787) and (v452 == (0 - 0))) then
											v79[v81[2]] = v303;
											v73 = v81[3];
											break;
										end
									end
								end
								break;
							end
						end
					else
						local v304 = 0 - (0 + 0);
						local v305;
						local v306;
						local v307;
						while true do
							if (v304 == (0 - 0)) then
								v305 = v70[v81[6 - 3]];
								v306 = nil;
								v304 = 1 + 0;
							end
							if (v304 == (1 + 0)) then
								v307 = {};
								v306 = v10({}, {__index=function(v430, v431)
									local v432 = v307[v431];
									return v432[1][v432[4 - 2]];
								end,__newindex=function(v433, v434, v435)
									local v436 = v307[v434];
									v436[1 + 0][v436[1 + 1]] = v435;
								end});
								v304 = 2 + 0;
							end
							if ((v304 == (1098 - (709 + 387))) or (393 >= 4242)) then
								for v438 = 1859 - (673 + 1185), v81[11 - 7] do
									local v439 = 0 - (1389 - (135 + 1254));
									local v440;
									while true do
										if (v439 == (0 - 0)) then
											v73 = v73 + 1 + 0;
											v440 = v69[v73];
											v439 = 1;
										end
										if ((989 < 4859) and (2234 >= 1230) and (v439 == ((3 - 2) + 0))) then
											if ((v440[1 - (0 - 0)] == (17 + 52)) or (343 == 1786)) then
												v307[v438 - 1] = {v79,v440[5 - 2]};
											else
												v307[v438 - (1881 - (446 + 956 + 478))] = {v61,v440[1850 - (559 + 1288)]};
											end
											v78[#v78 + 1] = v307;
											break;
										end
									end
								end
								v79[v81[2]] = v29(v305, v306, v62);
								break;
							end
						end
					end
				elseif (v82 <= (2024 - (609 + (2849 - (389 + 1138))))) then
					v73 = v81[(1031 - (102 + 472)) - (13 + 441)];
				elseif (v82 == (351 - 257)) then
					local v308 = v81[5 - 3];
					v79[v308](v79[v308 + (4 - 3)]);
				else
					local v309 = v81[1 + 1];
					local v310 = v81[14 - 10];
					local v311 = v309 + 2;
					local v312 = {v79[v309](v79[v309 + 1], v79[v311])};
					for v343 = 1, v310 do
						v79[v311 + v343] = v312[v343];
					end
					local v313 = v312[1 + 0 + 0];
					if (((2570 > 2409) and v313) or (4795 < 949)) then
						v79[v311] = v313;
						v73 = v81[8 - 5];
					else
						v73 = v73 + 1 + 0 + 0;
					end
				end
				v73 = v73 + (1 - 0);
			end
		end;
	end
	return v29(v28(), {}, v17)(...);
end
return vv9(), ...);
